# Load Packages

from flask import Flask, render_template, url_for, request
import random as rn
#import textblob
#from textblob import TextBlob
import joblib
import pickle
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfTransformer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
import pandas as pd

# Create our Flask Object Instance

app = Flask(__name__)

# Set Home Page Template

@app.route('/')
def home():
    sentances = ["ุงูููู ุฃุนููุง ุนูู ุฐูุฑู ูุดูุฑู ูุญุณู ุนุจุงุฏุชู",
                 " ุทุจ ุงูุด ูู ุงูุฎูุงู ุจุงูุชุญุฏูุฏ ุญุชู ูุตูุฑ ูู ูุงูุนููุจู ",
                 "ุณุงุนุชูู ุฌุฏ ูููุจุงูุฉ ุดุงู ูุงููููุฌ ุฏู ูุฌูุจู ูู ุดูุงู ูุงุจูู ุงูุช ูุงููู ูุชูููุด",
                 "ูู ุงููุดุฑุญุฉ ูุงูุตู ูุชูู  ููู ูููุง ูุฑูุญ ุดูู ุจูุฏ ุชุงููู ุชุตูุน ูููุง ูุงุจูู ุงูุช ",
                 "ูู ูุง ุนูู ูู ูู ูุง ุนูู ููู ูู ูู ูู ุงููุงุถููููู ูููู ุนูููู ูุนูููู  ูุง ูุง ูุฐุง ููุฏูุง ุงูุดู ูุญูุฏ ูุฌุฏู ููุดู",
                 "ุงูุงููู ุฎุฏ ุจุทููุฉ ูุงุณ ูุตุฑ ูุฎุฏ ุงูุฏูุฑู ููุงู ุนููู ูุงูุชู ุฎูููู ูู ุงููููุจูู ุงููู ุงูุชู ูููุง",
                 "ุงูุช ูุณู ูุจูุชุด ูู ุดุฑูุงุก ุงูุจุฑ !! :/ุงููุฑุตู ูุณู ูุฃุฏูู .. ู ุจู 4 ุฎุทูุงุช ุจุณ ;)1- ูุชุฌูุจ ููุด ูุชุดุจูู ููุฌู ูุดุฑูู",
                 "ูู ููุช ุฏูููุฉ ููุงู ุฒูุงุฏุฉ ูุฏูู ุนูู ุฏูุงุบู",
                 " ูุงุฏุฑู ุดูููู ุนููู  ",
                 " ูุงุฎู ุดููู ุชุจู ุชุญูู ูููุฏูุงู ูุงูุช ุจุฏููู ุถุงูุน ",
                 " ูุงุญุฏ ุดุงูุฑูุง ุฎุชู ุจุฏู ูุชูุฑ ุชูููุฉ ููุณููู ุนูููู ",
                 "   ูุงููุช ูุงููู ุนูุดุงู  ูุฑูุญูุง",
                 "ูุง ุฑุงุฌู ูู ุงูู ูู ุฏู ูู ุฏู ููุฉ ุงุฏุจ",
                 "ุงูุง ูุด ุนุงุฑู ุงูุง ุงูู ุฌุงุจูู ููุง",
                 " ูุงุฎู ุดููู ุชุจู ุชุญูู ูููุฏูุงู ูุงูุช ุจุฏููู ุถุงูุน",
                 " ูุงุฏุฑู ุดูููู ุนููู ",
                 " ููู ุจุชููู ูุฏู ุนูููุง ุทูุจ ูุนู ุงูุช ูุงูู ุงุตูุงุ",
                 "ุดูู ุงููู ูุถุงููุฌ ููู ุญุจูุจู ุงุฐ ูุงุชูููุช ุฑุงุญ ูุฎุณุฑ ุจุนุถูุง ููู ุจูุงูุทุฑููุฉ ุ",
                 "ูุงุงุงุงุกุก ูุฑุจู ูู ูุดุฎู ุงุจุจุจุฏุฏุฏุงู ูุงุฑุจ ุงูู ููุฒุญ",
                 "ูุงููู ูุฏุฑู ูุฐุง ูุฌุฃู ูุงูุดููู ุงุณููุง ุงูุฌุฏ ุงูุฌุฏ",
                 "ูู ุชุฏูุฑ ูุง ุชูุงูู ูููู ุบูุฑู ูููุช ูููู",
                 "ุดูู ุณุงููู ุงูุจุซ  ุดู ุงูููุณ ูุชุฑูุณ ุจุณ ุจุซ",
                 "ูุงุฌูุงุนุฉ ูุฏู ุฃุนุจุฑ ููู ุนู ุดููู ุจุณ ุงููุช ูุงูุณุงุนุฏ!!!!!ุญุชู ุงูุชููุช ุฐุง ูุฏุฑู ูุดููู ูุฒู",
                 "ูู ุจูุณููุฑ ุจูุฒุฑูู ุจูู ูุนูู ุจููุจูุง ูุง ุถุฌุฑ ููุง ููู ุงูููุง ูุง ุญุฏุง ุจุงูุจููุฏ ุชุงูููุง ูุนูู ุดู ุงููู ุญูุงุฑ ุจุณ ูู ุนูุฑู ููู ุฑูููู",
                 "ูู ุดูู ูุณุฃูููู ุดู ุชุบูุฑ ูู ูุดู ุตุฑูู ุนูู ูุฎุชูู",
                 " ูุด ูุงุฏุฑู ุงูู ุงุดู ุจุชุนุฑูู ูุงุฏ ุงูุดุนูุฑ ุงูู ุชุดููู ุงูู ุงู ุจุฏู ุชุงููู ุจุชุตูุฑู ุจุฏู ุชุณุชูุฑุบู ! ุงููGaging ุ",
                 "ุชูุฑุทุช ูุตุฑุช ุนุฑุจู ุงูุนูู ุนูู ุณูุฉ ูุงูุญูุงุฉ ุดู ุจุชุฎุฒู",
                 "ูุธุฑุงุชู ุงูุญุฒููุฉ ูู ุทุจูุนู ุดู ูุนุจุฑู ๐ข๐ข๐ข",
                 "ุชุคุจุฑูู ุชููู ุ! ุงูุญูุฏุงููู ุงูู ูู ูุจูุงูู",
                 "ููุง ุฃูุง ูุง ูุฏุฑุช ูุนูููู ๐ฅ ุงููู ูุณุชุฑ  ุจููู ุจูุญู ูุญุงุถุฑุฉ ุงูุณุงุนุฉ12 ููุง ุดู",
                 "ููุฑูุฒ   ุชุฐูุฑุชู ูุงุนููุงุก  ูุชุฐูุฑุช ุนูููู  ูุฎุฑุจ ุจูุช ุนูููู ูุงุนููุงุก ุดู ุญูููู",
                 "ููู ุฅูู ูููุญ ูุงูุฌุฑุงุด ุญุงุฌู",
                 "ูุนูุด ูุตุงุฑู ููุง ุณูุงุฑุฉ ูุฎุทู ููุตูู ูููุงูุด ูู ุฏุงุนู ุงุฏุงูู ุจุณ ุงุฌูุช ูุฅูู ุบุจูุฉ ูููุง ุจุฏู ุงุฑูุญ ููุด ุญุฏุง ูุฑูุญูู ููุงุฒู ุงุฏุฑุณ ููุฅูุชุญุงู ูุจุณ. ุตุจุงุญ ุงูุฎูุฑ๐คฆ๐ฝโโ๏ธ",
                 " ูุญุฏุฉ ุจุชุณุฃู ุญุจูุจูุง ุดู ุจุฏู ุชูุฏููู ุนูู ุนูุฏ ุงููููุชุงูู ! ๐๐ ุญูุงููุง ุจุฏู ุงูุฏููู ุนุงูุตุฑุงุท ุงููุณุชููู ููุชูุจ ููุชุฑู ุจุนุถ .๐ธ  ุชูุจูุฑุฑุฑุฑุฑุฑุฑโฆ",
                 "ุฃูุง ุจุฏู ูุงู ู ุฃูุช ููู ุนุงุฑู ุดู ุจุฏู",
                 "ุงูุง.ุจุงููุณุจู ูุบุงููุชู ูู ููู ุจุชุถู ุงุญูุง ุดู ุนุฑูุชู ููู ุจุนูุฑู ูุง ุดูุช ุญุฏุง ุฑููู ูุญุณุงุณ ูุชูุง",
                 "ุถุฑุจุชูู ุจุงูุฑุฃุณ ุจูุฌุนู  ูุง ูุตุงุฑู ููุง ุฏุฎุงู ูุงููู ูุดููู",
                 " ุงูุจูุงุช : ุดู ุงูุงูุชุญุงู ุ ุฒูุช  49 ูู 50 ุงูุดุจุงุจ : ุดู ุงูุงูุชุญุงู ุ ุชูุฌูุฑ 5 ูู 50  ูุง ุฅุญุณุงุณ ููุง ุถููุฑ ูุงุฎุฑ ุดู ูู ุถุงุจุท ููู ุชุจูุน ูุทุงูุฑโฆ",
                 "โูุฎููู๐  #ุฑุจููู ุงุฎุฐูููู ุงูุฏููููุง ูุงุชุฑุชุงุญูููู๐   ููุด ุถูุฌู",
                 "ุฃูุง ูุน ุงูุฌููุงู ุฌุงูู ุจู ููุด ูุฃูุง ูุน ุงูุตุงุญูู ุตุงุญู ูุฌุงูุฒ ูู ููู ูุง ุชุจุบู ูุจูุด ูุจูุด ุฎุฐูู ุนูู ูู ุงููุฑุต ุฐูุจ ูุงูุฒ",
                 "ูุงุดูู ุงุญุฏ ูุฑูุถ ูุฑุงู ๐๐ฝ๐๐ฝ๐๐ฝ ุชุฑู ููุด ูุงูููู ููุงูุฉ",
                 " ุฌูุชู ุบูุง ูุง ุฌูุช ูู ุงุชุฑุฌุงู ูููู ุชููููู ูู ุฑุงุณ ุฎุดูู  ุฌูุชู ููุฏุฑ ุนุดุฑุชู ููุช ููุงู ูุง ุนุงุฏู ุงููู ุฐุง   ุงูุบูุง ูุฒ ููู   #ุชุงูู",
                 "ุชุฏุฑู ููุด ูุงุงุจู ุงุตูุฑ ุญููู ุนุดุงู ูุงุชููููู ุนูู ูุงูููุจู ุญููู ูุงูุญูุงุฑู ุญููู ูุฎู ููุด ููุงุงุญุฏ ูุบูุท ุนูู ๐",
                 "ุงูุง ุงููู ูููุช ูุงุนุฑู ุฌุจุช ุงูุงุฑูุงู ุฏู ูููู ุ ูุงุฑูุช ูุงุชุญุฑููุงุด ูู ูุตุงุฏุฑู",
                 "ูุด ูุชุฎููู ุงูู ูููู ููุฏ ุจุชุงุน ุจูุฑุง ูุงู ููุฑูุญ ุนููุง ูุงูุง ูุงุนุฏู ูุงููู ูุชุฃูุชุฎู ู ุงูุณูู ๐ููุนุฑูุด ุจุฑุฏูุง ุบูุฑ ููุง ูุถูุน",
                 "ุฑุจูุง ุจูุจุนุชูู ุนูุงูุงุช ูุงุถุญู ุฌุฏุง ุงููุงุช ูุงูุช ุจุชุตูู ุชููู ุนูุดุงู ุบุจู ูููุด ุงู ุงูู ุงู ุงููุงุญุฏ ููุชุญ ูุชุงุจ ุจูุฑุง ๐",
                 "๐๐๐๐๐ ุงูุง ุญูุธุช ุดููู ุงูุจุงุฑุญ  ุจุณ ูููุด ุญุฏ ุจุดุฌุนูู ูุงูููู ุงุนูู ุงูู ุฒููููุช",
                 "ุงุญูุง ููุนูู ูู ุญุงุฌุฉ ุชุญุณุณู ุงูู ุฒูู ุฒู ุงู ุญุฏ ูู ุญูุงุชูุง ุจุณ ูููุฌู ูู ุงุฎุฑ ุงูููู ููููููู ุงูู ูุด ุฒู ุฃู ุญุฏ ูุงูู ุฃูู ูููู ูููู",
                 "ุงูุง ูุด ุนุงุฑูู ูู ุงููุงุณ ุชุนุงูููุง ูููุณ ููุช ูุงูููู ูุฒุงุฌูุง ุญูู ูุชุนุงูููุง ูุญุด ููุง ูููู ูุฒุงุฌูุง ูุญุด ุงูุชู ุงูู ุนุจุท ูุนูู ููุง ุงูู ุ"


                 ]
    def get_ran():
        return (rn.choice(sentances))

    return render_template('home.html',sentances =sentances , rn =rn , get_ran = get_ran())

    # Set Predict Page
# Using TextBlob package (powered by the Google Translate API)

@app.route('/predict',methods=['GET', 'POST'])

def predict():
    if request.method == 'POST':
        count_vect = CountVectorizer()
        tfidf_transformer = TfidfTransformer()
        data2 = pd.read_csv('Arabic_Data_cleaned_without_duplicated.csv')
        text2 = data2['Arabic_Tweets_Cleaned'].values.tolist()
        target2 = data2['labels_new'].values.tolist()
        X_train2, X_test2, y_train2, y_test2 = train_test_split(text2, target2, test_size=0.2, shuffle=True,random_state=42)
        X_train_counts2 = count_vect.fit_transform(X_train2)
        X_tfidf_train2 = tfidf_transformer.fit_transform(X_train_counts2)
        #X_test_counts2 = count_vect.transform(X_test2)
        #X_tfidf_test2 = tfidf_transformer.transform(X_test_counts2)
        clf_NB = MultinomialNB().fit(X_tfidf_train2, y_train2)
#######################################################################################################3
        #svm_clf = svm.SVC()
        #svm_clf = svm_clf.fit(X_tfidf_train2, y_train2)

        #joblib.dump(svm_clf, 'svm_Arabic_model2.pkl')
        svm_arabic_model = open('svm_Arabic_model2.pkl', 'rb')
        clf_svm = joblib.load(svm_arabic_model)

        #####################################################################################################
        message = request.form['message']
       # message = str(message)
        #print(str(message))
        message2 = message
        message = [message]
  ##########################################################################################################
        X_testing_counts = count_vect.transform(message)
        X_tfidf_testing = tfidf_transformer.transform(X_testing_counts)
        detect = clf_NB.predict(X_tfidf_testing)
        print(detect)
        ##########################################################################################
        #########################################################################################
        #joblib.dump(model, 'XG_Arabic_model2.pkl')
        XG_arabic_model = open('XG_Arabic_model2.pkl', 'rb')
        clf_xg = joblib.load(XG_arabic_model)
        detect2 = clf_xg.predict(X_tfidf_testing)
        print(detect2)


        detect3 = clf_svm.predict(X_tfidf_testing)
        print(detect3)

        #blobline = TextBlob(message)
        #detect = blobline.detect_language()
    return render_template('result.html',prediction = detect,prediction2 = detect2,prediction3 = detect3,messages = message2)

if __name__ == '__main__':
	app.run()